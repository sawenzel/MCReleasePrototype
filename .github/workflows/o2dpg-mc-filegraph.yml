# A action to produce the O2DPG filegraph artefact.
# This can be used to optimize runtime execution and delete files early
name: O2DPG file-graph generation

on:
  workflow_dispatch:  # manual trigger

permissions:
  contents: write # allow push

jobs:
  graph-artefact:
    runs-on: [self-hosted, openstack-priv] # runs on special hardware having CVMFS and sudo apptainer
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Important for git history

      - name: Fetch base branch
        run: git fetch origin ${{ github.base_ref }} --depth=1

      - name: Setup the task
        run: |
          cat > job_script.sh <<'EOF'
          #!/usr/bin/bash

          cat $0

          git clone https://github.com/AliceO2Group/O2DPG O2DPG
          g++ -O2 ./O2DPG/UTILS/FileIOGraph/monitor_fileaccess_v2.cpp -o monitor_fileaccess_v2.exe

          # this enables the file-graph generation
          export O2DPG_PRODUCE_FILEGRAPH=${PWD}/monitor_fileaccess_v2.exe

          ${O2DPG_ROOT}/MC/bin/o2dpg_sim_workflow.py -eCM 900 -col pp -gen pythia8 -proc inel -tf 1      \
                                                        -ns 10 -e TGeant4                                \
                                                        -interactionRate 10000                           \
                                                        -productionTag "alibi_O2DPG_pp_minbias_testbeam" \
                                                        -run 301000 -seed 624 --include-qc

          ${O2DPG_ROOT}/MC/bin/o2_dpg_workflow_runner.py -f workflow.json --target-labels AOD QC --cpu-limit 8
          EOF

      - name: Run job
        run: |
          # checkout the runTimeCode
          git clone https://github.com/AliceO2Group/O2DPG O2DPG
          
          mkdir job_workdir
          export WORK_DIR=${PWD}/job_workdir

          # run the above script in apptainer in a specified software version
          APPTAINER_SUDO=yes GRID_CVMFS_PACKAGE=O2sim::v20250924-1 ./O2DPG/GRID/utils/runGRIDContainerized.sh ./job_script.sh

      - name: Show the graph
        id: graph
        run: |
          cat job_workdir/pipeline*report*.json

      # necessary so that github actions runner can delete the workspace polluted by root
      - name: Fix permissions
        if: always()
        run: sudo chown -R $USER:$USER $GITHUB_WORKSPACE

