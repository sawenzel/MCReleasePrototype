name: Perform GRID job

on:
  pull_request:
    paths:
      - 'jobs/**'

jobs:
  alien-job-pipeline:
    runs-on: [self-hosted, alibi-cvmfs]
    steps:
      - name: Checkout PR code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 

      - name: Find added files in jobs
        id: check
        run: |
          set -x
          BASE_SHA="${{ github.event.pull_request.base.sha }}"
          HEAD_SHA="${{ github.event.pull_request.head.sha }}"
          NEW_FILES=$(git diff --name-status "$BASE_SHA" "$HEAD_SHA" | grep '^A' | awk '{print $2}' | grep '^jobs/' || true)
          echo "new_files=$NEW_FILES" >> $GITHUB_OUTPUT
          echo "new_files=$NEW_FILES"

      - name: Determine job CVMFS package and check if package available
        id: cvmfs_package_check
        run: |
           # Checks if the package referenced in the job file exists
           PACKAGE=$(grep '^#JDL_PACKAGE' ${{ steps.check.outputs.new_files }} | sed 's/.*=//')
           echo "Job is asking for package ${PACKAGE}"
           
           # split package into root and version for checks on cvmfs

           # Strip optional prefix like [VO_ALICE@]
           cleaned="${PACKAGE#*@}"  # Removes everything up to and including '@]' if present
           echo "cleaned ${cleaned}"
           # Split on '::'
           IFS='::' read -r PACKAGE_ROOT PACKAGE_VERSION <<< "$cleaned"

           echo "PACKAGE_ROOT: $PACKAGE_ROOT"
           echo "PACKAGE_VERSION: $PACKAGE_VERSION"
           
           CVMFS_BASE_PATH='/cvmfs/alice.cern.ch/el9-x86/Packages/${PACKAGE_ROOT:-notset}/${PACKAGE_VERSION:-notset}'

           echo "Checking for presence of ${CVMFS_BASE_PATH}"

           [ -d ${CVMFS_BASE_PATH} ] && exit 1
           
           exit 0
           
      - name: Submit job
        id: alien_submit
        run: |
           exit 0

      - name: Wait job completion
        id: wait_alien
        run: |
           exit 0
      
