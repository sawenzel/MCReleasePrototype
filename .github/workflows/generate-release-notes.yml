name: Generate Release Notes

on:
  pull_request:
    types: [opened, synchronize, reopened]
    paths:
      - 'releases/MCProd_releases.csv'

jobs:
  generate:
    runs-on: [self-hosted, alibi-cvmfs]
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Important for git history

      - name: Fetch base branch
        run: git fetch origin ${{ github.base_ref }} --depth=1

      - name: Extract tags
        id: extract
        run: |
          BASE=origin/${{ github.base_ref }}

          # get last line of this file in the HEAD version
          OLD_LINE=(tail -n 1 releases/MCProd_releases.csv)
          CURR_TAG=$(echo "$NEW_LINE" | cut -d',' -f1 | xargs)
          
          echo "Current tag is ${CURR_TAG}"
          echo "current_tag=${CURR_TAG}" >> $GITHUB_OUTPUT

          NEW_LINE=$(git diff $BASE...HEAD -- releases/MCProd_releases.csv \
            | grep '^+' | grep -v '^+++' | sed 's/^+//')

          echo "Found new release line: $NEW_LINE"
          echo "Found base release line: "

          CANDIDATE_TAG=$(echo "$NEW_LINE" | cut -d',' -f1 | xargs)
          FINAL_TAG=$(echo "$NEW_LINE" | cut -d',' -f2 | xargs)
          COMMENT=$(echo "$NEW_LINE" | cut -d',' -f3- | xargs)

          echo "candidate_tag=$CANDIDATE_TAG" >> $GITHUB_OUTPUT
          echo "final_tag=$FINAL_TAG" >> $GITHUB_OUTPUT
          echo "comment=$COMMENT" >> $GITHUB_OUTPUT
          exit 1
      
      - name: Prepare the releases file
          
          /cvmfs/alice.cern.ch/el9-x86_64/Packages/O2PDPSuite

      - name: Get release tag diff
        id: tags
        run: |
          python3 workflow_scripts/get_release_tags.py release-tags.txt > tags.json
        shell: bash

      - name: Summarize tag changes
        id: diff_summary
        run: |
          python3 workflow_scripts/parse_cvmfs_release_json.py tags.json
        shell: bash

      - name: Get commits across repos
        id: commits
        run: |
          python3 scripts/get_commits.py tags.json > commits.json
        shell: bash

      - name: Summarize commits with LLM
        id: summary
        run: |
          python3 scripts/summarize_commits.py commits.json > summary.md
        shell: bash

      - name: Comment PR with release notes
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          python3 scripts/post_comment.py summary.md
